---
import Layout from '../layouts/Layout.astro';
import Experience from '../components/resume/Experience.astro';
import { getCollection } from 'astro:content';

const resume = (await getCollection('resume'))
  .sort((a, b) => a.data.sortOrder - b.data.sortOrder);

const experience = (await getCollection('experience'))
  .sort((a, b) => new Date(b.data.startDate).getTime() - new Date(a.data.startDate).getTime());
---

<Layout title="Chris Pruyne | Software Engineer">
  {resume.map(async (item) => {
    const { Content } = await item.render()
    if (item.slug === 'experience') {
      return (
          <div class="resume-section print-only">
            <div class="resume-section--meta">
              <h2 class="resume-section--experience-title">{item.data.title}</h2>
            </div>
            <div class="resume-section--description">
              <div class="resume-section--body">
                <Content />
              </div>
            </div>
          </div>
          <>
            {experience.map(async (item) => {
              return <div class="resume-section"><Experience data={item} /></div>
            })}
          </>
      )
    }

    if (item.slug === 'contact') {

      return (
        <div class={`resume-section ${item.slug}-section`}>
          <div class="resume-section--meta">
            <h2>{item.data.title}</h2>
            {
              item.data.subtitle
                ? <h3 class="resume-section--subtitle">{item.data.subtitle}</h3>
                : null
            }
          </div>
          <Content />
        </div>
      )
    }

    return (
        <div class={`resume-section ${item.slug}-section`}>
          <div class="resume-section--meta">
            <h2>{item.data.title}</h2>
            {
              item.data.subtitle
                ? <h3 class="resume-section--subtitle">{item.data.subtitle}</h3>
                : null
            }
          </div>
          <div class="resume-section--description">
            <div class="resume-section--body">
              <Content />
            </div>
          </div>
        </div>
      )
  })}
</Layout>

<style>
  .resume-section--meta h2,
  .resume-section--meta h3 {
    margin: 0;
    font-weight: 400;
  }

  .resume-section--subtitle {
    color: rgb(var(--text-alt-color));
  }

  @media screen {
    .resume-section {
      min-height: 100vh;
      margin: 2rem 2rem 0 calc(var(--bg-size) * 2);
      display: flex;
      align-items: flex-start;
      justify-content: center;
      flex-direction: column;
      scroll-snap-align: start;
    }
    .resume-section.print-only {
      display: none !important;
    }
  }

@media screen and (min-width: 800px) {
    .resume-section {
      display: grid;
      grid-template-columns: 35% 1fr;
      column-gap: 1rem;
      align-items: center;
      margin: 0 calc(var(--bg-size) * 2);
    }

    .resume-section--meta h2,
    .resume-section--meta h3 {
      text-align: right;
    }

    .resume-section--meta {
      display: flex;
      flex-direction: column;
      align-items: flex-end;
    }

    .resume-section--description {
      border-left: 1px solid rgba(var(--text-alt-color), 0.5);
      padding: 2rem 0 2rem 2rem;
    }
  }

  @media print {
    .resume-section.contact-section .resume-section--meta {
      display: flex;
      flex-direction: row;
      align-items: baseline;
      margin-bottom: 1rem;
    }

    .resume-section.print-only {
      display: block !important;
    }

    .resume-section.contact-section .resume-section--subtitle {
      margin-left: 1rem;
    }

    .resume-section {
      padding: 1rem 0;
      break-inside: avoid;
    }

    .resume-section:not(:last-child,.resume-section.contact-section) {
      border-bottom: 1px solid rgba(var(--text-alt-color), 0.25);
    }
  }
</style>
